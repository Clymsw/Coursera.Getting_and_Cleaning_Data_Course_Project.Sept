??package
??package
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
library(xlsl)
library(xlsx)
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
?xml
??xml
install.packages(c("jpeg","jsonlite","data.table","httr"))
length(val[val==24])
names(d)
nrow(d)
d2 = d[d$VAL>=24]
d2 = d[d$VAL>=24,]
nrow(d2)
head(d2)
d2 = d[d$VAL>=24 $ !is.na(d$VAL),]
d2 = d[d$VAL>=24,]
d3 = d2[!is.na(d2$VAL)]
d3 = d2[!is.na(d2$VAL),]
nrow(d3)
nrow(d)
sum(d$VAL==24)
sum(d$VAL==24 & !is.na(d$VAL))
sum(d$VAL<24 & !is.na(d$VAL))
sum(d$VAL==25 & !is.na(d$VAL))
sum(d$VAL==23 & !is.na(d$VAL))
sum(d$VAL==22 & !is.na(d$VAL))
sum(d$VAL==21 & !is.na(d$VAL))
sum(d$VAL==20 & !is.na(d$VAL))
sum(d$VAL==24,na.rm=T)
u = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","r")
d = read.csv(u)
d2 = d[d$VAL>=24 $ !is.na(d$VAL),]
d2 = d[d$VAL>=24,]
sum(d$VAL==24,na.rm=T)
library(data.table)
data.table
install.packages("data.table")
swirl()
library(swirl)
swirl()
?read.csv
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran,id_id,package,country)
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(-(X:size))
select(cran,-(X:size))
filter(cran,package="swirl")
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version=="3.0.2",country=="IN")
filter(cran,r_version=="3.0.2",country=="RU")
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="IN"|country=="US")
filter(cran,size > 100500 & r_os=="linux-gnu")
filter(cran,size > 100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2 = select(size:ip_id)
cran2 = select("size":"ip_id")
cran2 = select(size:ip_id)
cran
select(cran,size)
select(cran,size:ip_id)
cran2 <-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id)
_
arrange(cran2,desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_gb = size_mb/2^10)
mutate(cran3, sie_mb = size/2^20,size_gb = size_mb/2^10)
mutate(cran3, size_mb = size/2^20,size_gb = size_mb/2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran.avg_bytes=mean(size))
summarize(cran,avg_bytes=mean(size))
library(dplyr)
q
quit()
install.packages("rJava")
install.packages("rJava")
install.packages("xlsx")
xlsx
library(xlsx)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
system.time()
system.time(rnorm)
swirl()
library(swirl)
swirl()
swirl()
swirl()
install.packages("rhdf5")
install.packages("rhdf5")
?install.packages
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages("httr")
install.packages("foreign")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "0fef0d859ec602d2897e",
secret = "07b62b4598e630c7c536182b6b3ff4a58dee4848")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
library(httr)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",  key = "0fef0d859ec602d2897e",  secret = "07b62b4598e630c7c536182b6b3ff4a58dee4848")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
?oauth2.0_token
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",  key = "0fef0d859ec602d2897e",  secret = "07b62b4598e630c7c536182b6b3ff4a58dee4848")
myapp
myapp <- oauth_app("github",  key = "0fef0d859ec602d2897e",  secret = "83c782f9296d88c09959038f3e52e54d6058380b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httr")
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",  key = "0fef0d859ec602d2897e",  secret = "83c782f9296d88c09959038f3e52e54d6058380b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
demo("oauth2-github", package = "httr", ask = FALSE)
install.packages("sqldf")
u = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
library(data.table)
dt = fread(url())
dt = fread(u
)
dt = fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
class(dt)
names(dt)
x1 = sqldf("select distinct AGEP from dt")
library(sqldf)
x1 = sqldf("select distinct AGEP from dt")
x2 = unique(dt$AGEP)
nrow(x1)
nrow(x2)
class(x2)
x2
class(x1)
x1 = x1[[1]]
x1 == x2
u = url("http://biostat.jhsph.edu/~jleek/contact.html")
s = readLines(u)
nchar(s)
class(S)
class(s)
length(s)
s = paste(s,sep="")
nchar(s)
s
s = paste(s,collapse="")
length(s)
nchar(s)
s
s = readLines(u)
nchar(s[c(10,20,30,100)])
library(foreign)
d = read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
d = read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",10,header=TRUE,strip.white=TRUE)
names(D)
names(d)
d = read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3),header=TRUE,strip.white=TRUE)
d = read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3),header=FALSE,strip.white=TRUE)
names(d)
head(d)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
class(d)
names(d)
head(d)
Undebug(ls)
undebug(ls)
x.train = read.csv(f.x.train)
f.x.train = "./train/x_train.txt"
x.train = read.csv(f.x.train)
my.data.folder = "C:/Users/Андрей/Google Диск/Projects/coursera/course project 3/UCI HAR Dataset"
setwd(my.data.folder)
x.train = read.csv(f.x.train)
library(data.table)
x.train = data.table(x.train)
class(x.train)
head(x.train)
tables()
x.train2 = read.table('./train/x_train.txt',header=FALSE); #imports x_train.txt
head(x.train)
head(x.train)==head(x.train2)
x.train==x.train2
ncol(x.train)
ncol(x.train2)
ncol(x.train[1])
ncol(x.train[[1]])
class(x.train)
class(x.train2)
x.train = data.table(x.train2)
ncol(x.train2)
features = read.table('./features.txt',header=FALSE); #imports features.txt
features[,2]
class(features)
nrow(features)
head(features)
features = read.table(f.features)[,2]
f.features = "./features.txt"
features = read.table(f.features)[,2]
class(features)
nrow(features)
head(features)
length(features)
?data.table
colNames(x.train)
colNames(x.train) = features
colnames(x.train)
colnames(x.train) = features
features = as.character(read.table(f.features)[,2])
class(features)
length(features)
colnames(x.train) = features
colnames(x.train)
head(x.train,2)
xf = read.table(file.features)[,2]
file.features = "./features.txt"
xf = read.table(file.features)[,2]
class(xf)
xf2 = grep(".*mean.*|.*std.*",xf)
length(xf2)
class(xf2)
head(xf2)
xf[xf2]
file.x.train = "./train/x_train.txt"
x.train = data.table(read.table(file.x.train,header=FALSE))
features
filter_for_features = grep(".*mean.*|.*std.*",features)
head(x.train)
x.train = data.table(read.table(file.x.train,header=FALSE))[filter_for_features]
head(x.train)
colnames(x.train) = features[filter_for_features]
x.train = data.table(read.table(file.x.train,header=FALSE))[,filter_for_features]
colnames(x.train) = features[filter_for_features]
x.train = read.table(file.x.train,header=FALSE)[filter_for_features]
colnames(x.train) = features[filter_for_features]
head(x.train)
colnames(x.train) = gsub('-mean', 'Mean', colnames(x.train))
colnames(x.train) = gsub('-std', 'Std', colnames(x.train))
head(x.train)
features = as.character(read.table(file.features)[,2])
filter_for_features = grep(".*mean.*|.*std.*",features)
head(features)
features = features[filter_for_fetures]
features = features[filter_for_features]
head(features)
length(features)
features = gsub('-std', 'Std', features)
head(features)
features = gsub('-mean', 'Mean', features)
head(features)
features = gsub('\\()', '', features)
head(features)
features = gsub('^(t)', 'Time', features)
head(features)
features = gsub('^(f)', 'Freq', features)
head(features)
features = gsub('([Gg]ravity)', 'Gravity', features)
features = gsub('([Bb]ody[Bb]ody|[Bb]ody)', 'Body', features)
features = gsub('[Gg]yro', 'Gyro', features)
features = gsub('([Bb]odyaccjerkmag)', 'BodyAccJerkMag', features)
features
x.train = read.table(file.x.train,header=FALSE)[filter_for_features]
rm(x.train2)
colnames(x.train) = features
head(x.train)
y.train = read.table(file.y.train,header=FALSE,col.names=c("activityId"))
file.y.train = "./train/y_train.txt"
y.train = read.table(file.y.train,header=FALSE,col.names=c("activityId"))
head(y.train)
nrow(y.train)
y.train
file.features = "./features.txt"
file.act.labels = "./activity_labels.txt"
file.sub.train = "./train/subject_train.txt"
file.x.train = "./train/x_train.txt"
file.y.train = "./train/y_train.txt"
file.sub.test = "./test/subject_test.txt"
file.x.test = "./test/x_test.txt"
file.y.test = "./test/y_test.txt"
subjects = read.table(file.sub.train,header=FALSE,col.names=c("subject"))
head(subjects)
subjects
labels = read.table(file.act.labels,header=FALSE)
head(labels)
labels
class(labels)
activities
activities = read.table(file.y.train,header=FALSE,col.names=c("activity"))
activities
rm(ls())
rm(list=ls())
my.data.folder = "C:/Users/Андрей/Google Диск/Projects/coursera/course project 3/UCI HAR Dataset"
setwd(my.data.folder)
#используем файлы
file.features = "./features.txt"
file.act.labels = "./activity_labels.txt"
file.sub.train = "./train/subject_train.txt"
file.x.train = "./train/x_train.txt"
file.y.train = "./train/y_train.txt"
file.sub.test = "./test/subject_test.txt"
file.x.test = "./test/x_test.txt"
file.y.test = "./test/y_test.txt"
#получаем список переменных
features = as.character(read.table(file.features,header=FALSE)[,2])
#получаем типы активности
labels = read.table(file.act.labels,header=FALSE)
#фильтр
filter_for_features = grep(".*mean.*|.*std.*",features)
#изменяем имена столбцов, делая их более ясными
features = features[filter_for_features]
features = gsub('-std', 'Std', features)
features = gsub('-mean', 'Mean', features)
features = gsub('\\()', '', features)
features = gsub('^(t)', 'Time', features)
features = gsub('^(f)', 'Freq', features)
features = gsub('([Gg]ravity)', 'Gravity', features)
features = gsub('([Bb]ody[Bb]ody|[Bb]ody)', 'Body', features)
features = gsub('[Gg]yro', 'Gyro', features)
features = gsub('([Bb]odyaccjerkmag)', 'BodyAccJerkMag', features)
features = gsub('-', '', features)
init.data = rbind(read.table(file.x.train,header=FALSE),read.table(file.x.test))[filter_for_features]
colnames(labels) = c("id","name")
labels = read.table(file.act.labels,header=FALSE,col.names=c("Activity.ID","Activity.Name"))
head(labels)
activities = read.table(file.y.train,header=FALSE,col.names=c("Activity.ID"))
class(activities)
head(activities)
subjects = read.table(file.sub.train,header=FALSE,col.names=c("Subject.ID"))
head(subjects)
nrow(init.data)
nrow(activities)
activities = rbind(read.table(file.y.train,header=FALSE,col.names=c("Activity.ID"),read.table(file.y.test,header=FALSE,col.names=c("Activity.ID"))
)
)
activities = rbind(read.table(file.y.train,header=FALSE,col.names=c("Activity.ID")),read.table(file.y.test,header=FALSE,col.names=c("Activity.ID")))
nrow(activities)
?rbind
subjects = rbind(read.table(file.sub.train,header=FALSE,col.names=c("Subject.ID")),read.table(file.sub.test,header=FALSE,col.names=c("Subject.ID")))
nrow(subjects)
result.data = merge(cbind(subjects,activities,init.data),labels,by="Activity.ID")
head(result.data)
head(init.data)
colnames(init.data) = features
result.data = merge(cbind(subjects,activities,init.data),labels,by="Activity.ID")
head(result.data)
result.data = merge(cbind(subjects,activities,init.data),labels,by="Activity.ID",all.x=TRUE)
View(result.data)
View(result.data)
?merge
result.data = merge(cbind(subjects,activities,init.data),labels,by="Activity.ID")
?melt
?dcast
result.data = merge(labels,cbind(subjects,activities,init.data),by="Activity.ID")
?ddply
library(plyr)
tidy.data = aggregate(. ~Subject.ID + Activity.Name, result.data, mean)
View(tidy.data)
View(tidy.data)
rm(result.daa$Activity.ID)
rm(result.data$Activity.ID)
rm(list=ls())
library(plyr)
my.data.folder = "C:/Users/Андрей/Google Диск/Projects/coursera/course project 3/UCI HAR Dataset"
setwd(my.data.folder)
#use files
file.features = "./features.txt"
file.act.labels = "./activity_labels.txt"
file.sub.train = "./train/subject_train.txt"
file.x.train = "./train/x_train.txt"
file.y.train = "./train/y_train.txt"
file.sub.test = "./test/subject_test.txt"
file.x.test = "./test/x_test.txt"
file.y.test = "./test/y_test.txt"
#get vector of features
features = as.character(read.table(file.features,header=FALSE)[,2])
#get labels
labels = read.table(file.act.labels,header=FALSE,col.names=c("Activity.ID","Activity"))
#get activities
activities = rbind(read.table(file.y.train,header=FALSE,col.names=c("Activity.ID")),
read.table(file.y.test,header=FALSE,col.names=c("Activity.ID")))
#список субъектов
subjects = rbind(read.table(file.sub.train,header=FALSE,col.names=c("Subject")),
read.table(file.sub.test,header=FALSE,col.names=c("Subject")))
#фильтр
filter_for_features = grep(".*mean.*|.*std.*",features)
#изменяем имена столбцов, делая их более ясными
features = features[filter_for_features]
features = gsub('-std', 'Std', features)
features = gsub('-mean', 'Mean', features)
features = gsub('\\()', '', features)
features = gsub('-', '', features)
features = gsub('^(t)', 'Time', features)
features = gsub('^(f)', 'Freq', features)
features = gsub('([Gg]ravity)', 'Gravity', features)
features = gsub('([Bb]ody[Bb]ody|[Bb]ody)', 'Body', features)
features = gsub('[Gg]yro', 'Gyro', features)
features = gsub('([Bb]odyaccjerkmag)', 'BodyAccJerkMag', features)
#загружаем данные
init.data = rbind(read.table(file.x.train,header=FALSE),
read.table(file.x.test))[filter_for_features]
#присваиваем имена данным
colnames(init.data) = features
result.data = merge(labels,cbind(subjects,activities,init.data),by="Activity.ID")
tidy.data = aggregate(. ~Subject + Activity, result.data, mean)
View(tidy.data)
View(tidy.data)
write.table(tidy.data)
write.table(tidy.data,"tidy.data.txt",row.names = FALSE)
rm(list=ls())
setwd("C:\Users\Андрей\Google Диск\Projects\coursera\course project 3")
setwd("C:/Users/Андрей/Google Диск/Projects/coursera/course project 3")
source("run_analysis.R")
source("run_analysis.R")
getwd()
my.data.folder = "C:/Users/Андрей/Google Диск/Projects/coursera/course project 3/UCI HAR Dataset/"
setwd(my.data.folder)
source("run_analysis.R")
setwd("C:/Users/Андрей/Google Диск/Projects/coursera/course project 3")
source("run_analysis.R")
source("run_analysis.R")
View(tidy.data)
str(init.data)
str(result.data)
table(result.data)
table(result.data$Activity)
table(result.data$Activity,result.data$Subject)
x = table(result.data$Activity,result.data$Subject)
class(x)
x[1]
x[1.1]
x[1,1]
x[1,2]
x[2,2]
x[[1]]
x[1,]
import(dplyr)
library(dplyr)
x = select(result.data,Activity,Subject)
head(x)
x = select(result.data,Activity,subjects)
x = select(result.data,Activity,Subject)
x = filter(result.data,Subject==22)
head(x)
x = select(result.data,-Activity.ID)
head(x)
View(x)
View(x)
x = group_by(result.data,Activity,Subject)
View(x)
View(x)
y = summarize(x,mean)
y = summarize(x,mean(x))
View(y)
View(y)
x = tbl_df(result.data)
x
class(x)
head(x)
